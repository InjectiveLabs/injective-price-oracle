// Code generated by goa v3.7.0, DO NOT EDIT.
//
// Injective Price Oracle API client
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-price-oracle/api/design -o ../

package injectivepriceoracleapi

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "Injective Price Oracle API" service client.
type Client struct {
	ProbeEndpoint goa.Endpoint
}

// NewClient initializes a "Injective Price Oracle API" service client given
// the endpoints.
func NewClient(probe goa.Endpoint) *Client {
	return &Client{
		ProbeEndpoint: probe,
	}
}

// Probe calls the "probe" endpoint of the "Injective Price Oracle API" service.
func (c *Client) Probe(ctx context.Context, p *ProbePayload) (res *ProbeResponse, err error) {
	var ires interface{}
	ires, err = c.ProbeEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*ProbeResponse), nil
}
