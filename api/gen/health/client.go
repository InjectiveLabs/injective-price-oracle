// Code generated by goa v3.7.0, DO NOT EDIT.
//
// health client
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-price-oracle/api/design -o ../

package health

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "health" service client.
type Client struct {
	GetStatusEndpoint goa.Endpoint
}

// NewClient initializes a "health" service client given the endpoints.
func NewClient(getStatus goa.Endpoint) *Client {
	return &Client{
		GetStatusEndpoint: getStatus,
	}
}

// GetStatus calls the "GetStatus" endpoint of the "health" service.
func (c *Client) GetStatus(ctx context.Context) (res *HealthStatusResponse, err error) {
	var ires interface{}
	ires, err = c.GetStatusEndpoint(ctx, nil)
	if err != nil {
		return
	}
	return ires.(*HealthStatusResponse), nil
}
