openapi: 3.0.3
info:
  title: PriceOracle Service
  description: HTTP server for the Price Oracle API
  version: "1.0"
servers:
- url: http://0.0.0.0:9924
paths:
  /api/health/v1/status:
    get:
      tags:
      - health
      summary: GetStatus health
      description: Get current backend health status
      operationId: health#GetStatus
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthStatusResponse'
              example:
                data: {}
                errmsg: Something has failed
                s: error
                status: Maiores ut et quaerat ad dignissimos nostrum.
        "500":
          description: Internal Server Error response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
  /api/price-oracle/v1/probe:
    post:
      tags:
      - Injective Price Oracle API
      summary: probe Injective Price Oracle API
      description: Validate TOML file
      operationId: Injective Price Oracle API#probe
      parameters:
      - name: X-Api-Key
        in: header
        description: API key for authentication
        allowEmptyValue: true
        schema:
          type: string
          description: API key for authentication
          example: Commodi similique placeat ratione et impedit aliquid.
        example: Autem consequatur.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProbeRequestBody'
            example:
              content:
              - 70
              - 97
              - 99
              - 105
              - 108
              - 105
              - 115
              - 32
              - 111
              - 102
              - 102
              - 105
              - 99
              - 105
              - 105
              - 115
              - 46
      responses:
        "200":
          description: OK response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProbeResponse'
              example:
                result: Expedita est quo eos amet dolores consequatur.
        "400":
          description: Bad Request response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
        "401":
          description: Unauthorized response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
        "500":
          description: Internal Server Error response.
          content:
            application/vnd.goa.error:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                id: 3F1FKVRR
                message: Value of ID must be an integer
                name: bad_request
      security:
      - api_key_header_X-Api-Key: []
components:
  schemas:
    Error:
      type: object
      properties:
        fault:
          type: boolean
          description: Is the error a server-side fault?
          example: false
        id:
          type: string
          description: ID is a unique identifier for this particular occurrence of
            the problem.
          example: 123abc
        message:
          type: string
          description: Message is a human-readable explanation specific to this occurrence
            of the problem.
          example: parameter 'p' must be an integer
        name:
          type: string
          description: Name is the name of this class of errors.
          example: bad_request
        temporary:
          type: boolean
          description: Is the error temporary?
          example: true
        timeout:
          type: boolean
          description: Is the error a timeout?
          example: false
      description: Invalid argument
      example:
        id: 3F1FKVRR
        message: Value of ID must be an integer
        name: bad_request
      required:
      - name
      - id
      - message
      - temporary
      - timeout
      - fault
    HealthStatus:
      type: object
      description: Status defines the structure for health information
      example: {}
    HealthStatusResponse:
      type: object
      properties:
        data:
          $ref: '#/components/schemas/HealthStatus'
        errmsg:
          type: string
          description: Error message.
          example: Something has failed
        s:
          type: string
          description: Status of the response.
          example: error
          enum:
          - ok
          - error
          - no_data
        status:
          type: string
          example: Vel consequuntur totam maiores harum neque alias.
      example:
        data: {}
        errmsg: Something has failed
        s: error
        status: Magni dolorem nesciunt.
      required:
      - s
      - status
    ProbeRequestBody:
      type: object
      properties:
        content:
          type: string
          description: TOML file contents
          example:
          - 69
          - 114
          - 114
          - 111
          - 114
          - 32
          - 112
          - 97
          - 114
          - 105
          - 97
          - 116
          - 117
          - 114
          - 32
          - 113
          - 117
          - 105
          - 115
          - 32
          - 114
          - 97
          - 116
          - 105
          - 111
          - 110
          - 101
          - 32
          - 101
          - 115
          - 115
          - 101
          - 32
          - 98
          - 101
          - 97
          - 116
          - 97
          - 101
          - 32
          - 101
          - 97
          - 113
          - 117
          - 101
          - 46
          format: binary
      example:
        content:
        - 81
        - 117
        - 105
        - 100
        - 101
        - 109
        - 32
        - 108
        - 97
        - 98
        - 111
        - 114
        - 117
        - 109
        - 32
        - 117
        - 116
        - 46
      required:
      - content
    ProbeResponse:
      type: object
      properties:
        result:
          type: string
          description: Result of the probe
          example: Et atque labore veniam voluptate.
      example:
        result: Quibusdam quam doloribus voluptatibus.
      required:
      - result
  securitySchemes:
    api_key_header_X-Api-Key:
      type: apiKey
      name: X-Api-Key
      in: header
tags:
- name: Injective Price Oracle API
  description: Injective-Price-Oracle services API doc
- name: health
  description: HealthAPI allows to check if backend data is up-to-date and reliable
    or not.
