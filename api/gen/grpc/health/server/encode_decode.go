// Code generated by goa v3.7.0, DO NOT EDIT.
//
// health gRPC server encoders and decoders
//
// Command:
// $ goa gen github.com/InjectiveLabs/injective-price-oracle/api/design -o ../

package server

import (
	"context"

	health "github.com/InjectiveLabs/injective-price-oracle/api/gen/health"
	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeGetStatusResponse encodes responses from the "health" service
// "GetStatus" endpoint.
func EncodeGetStatusResponse(ctx context.Context, v interface{}, hdr, trlr *metadata.MD) (interface{}, error) {
	result, ok := v.(*health.HealthStatusResponse)
	if !ok {
		return nil, goagrpc.ErrInvalidType("health", "GetStatus", "*health.HealthStatusResponse", v)
	}
	resp := NewProtoGetStatusResponse(result)
	return resp, nil
}
